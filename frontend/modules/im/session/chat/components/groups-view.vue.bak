<template>
    <div class="panel">
        <div class="list-aside">
            <div class="list-aside-header">
                <div class="search-bar">
                    <i-input v-model="keyword" placeholder="输入好友信息" ><i-button slot="append" icon="search" @click="searchGroups"></i-button></i-input>
                </div>
            </div>
        
            <div class="list-pane" ref="listPane">
                <!-- 群列表 -->
                <group-list
                    :height="height"
                    :groups="groups" 
                    :onItemClick="onGroupClick"
                    :on-reach-bottom="onFetchMoreGroups"
                ></group-list>
                <!--群列表 -->
                <Spin v-if="listLoading" class="spin" size="large" fix ></Spin>
                
            </div>
        </div>
        <div class="message-aside">
            <div class="message-header">
                <div class="search-bar">
                    <date-picker class="date-pick" type="datetime" v-model="startDate" placeholder="选择起始时间"></date-picker>
                    <i-input class="keyword-search" v-model="chatKeyword" placeholder="请输入聊天内容"><i-button slot="append" icon="search" @click="onSearchMessages"></i-button></i-input>
                </div>
            </div>
            <div class="message-pane">
                <message-list 
                    v-if="!showQueryPanel && !messagesLoading" 
                    :height="height" 
                    :messages="messages" 
                    :session="session"
                    :query="query"
                    :profile="profile"
                    :on-reach-top="fetchMessagesUpward"	
                    :on-reach-bottom="fetchMessagesBackward"
                ></message-list>
                <search-result-list 
                    v-else-if="showQueryPanel && !messagesLoading" 
                    :height="height" 
                    :messages="searchMessages" 
                    :session="session"
                    :query="query"
                    :profile="profile"
                    :onViewContext="onViewContext"
                    :on-reach-top="fetchMessagesUpward"	
                    :on-reach-bottom="fetchMessagesBackward"
                />
                <Spin class="spin" size="large" fix v-else></Spin>
            </div>
        </div> 
        <div class="group-member-aside">
            <div class="right-header">
                <div>
                    <div class="group-info">
                        <p class="c-disabled">群名</p>
                        <p class="c-content ellipsis">{{group.name || '无名氏'}}</p>
                    </div>
                    <div class="group-info group-notice">
                        <p class="c-disabled">群公告</p>
                        <p class="c-content" style="white-space: pre-wrap">{{group.signature || '暂无公告'}}</p>
                    </div>
                </div>
            </div>
            <div class="search-bar group-search">
                <i-input class="keyword-search" v-model="groupMemberKeyword" placeholder="搜索群成员"><i-button slot="append" icon="search" @click="searchGroupMembers"></i-button></i-input>
            </div>
            <div class="group-panel" ref="groupPanel"> 
                <group-member-list 
                    :height="groupMembersWidgetHeight" 
                    :groupMembers="groupMembers" 
                    :onReachBottom="onFetchMoreMembers">
                </group-member-list>
                <Spin v-if="groupMemberLoading" class="spin" large fix></Spin>
            </div>
        </div>
    </div>
</template>
<script>
import GroupList from './group-list.vue'
import MessageList from './message-list.vue'
import GroupMemberList from './group-member-list.vue'
import SearchResultList from './search-result-list.vue'

import Contact from '../../../../../models/im/contact'
import Session from '../../../../../models/im/session'
import Message from '../../../../../models/im/message'
import Group from '../../../../../models/im/group'
import GroupMember from '../../../../../models/im/groupMember'

export default {
    components: {
        GroupList,
        MessageList,
        GroupMemberList,
        SearchResultList
    },
    props: {
        filter: {
            type: Object,
            default: () => {}
        },
        cursor: {
			type: [Date, Number],
			default: ''
		}
    },
    data() {
        return {
            groupMembersWidgetHeight: 0,
            listLoading: false,
            messagesLoading: false,
            groupMemberLoading: false,
            startDate: '',
            chatKeyword: '',
            keyword: '',
            groupMemberKeyword: '',
            groups: [], 
            group: {},
            showQueryPanel: false,  
            messagesLoading: true,
            groupPage: 1,
            groupMemberPage: 1,
            groupMembers: [],
            height: 0,
            messages: [],
            session: {},
            query: '',
            profile: {}
        }
    },
    async mounted() {
        this.height = window.frameElement.contentWindow.innerHeight - 48
        this.groupMembersWidgetHeight = window.frameElement.contentWindow.innerHeight - 170
    
        this.fromContact = await Contact.retrieve(this.filter.fromId)

        await this.onFetchMoreGroups()
    },
    methods: {
        // 下拉无限加载群列表
		async onFetchMoreGroups() {
            this.keyword = this.filter.toId
            const page = await Group.searchGroups(this.filter.fromId, this.keyword, this.groupPage, 30, [])
            const groups = _.concat(this.groups, page.content)
            this.groups = groups
            console.log('onFetchMoreGroups: ', this.groups)

            this.messagesLoading = false
            this.listLoading = false
            ++this.groupPage
        },
		// 下拉无限加载群成员
		async onFetchMoreMembers() {
            const groupMembers = await Group.searchMembers(this.group.id, this.groupMemberKeyword, this.groupMemberPage, 30)
            this.groupMembers = _.concat(this.groupMembers, groupMembers.content)
            this.groupMemberLoading = false
            ++this.groupMemberPage
        },
        
        // 点击群列表的item
		async onGroupClick(group) {
            console.log("onGroupClick: ", group)

            this.group = group
            this.groupMemberLoading = true
			this.showQueryPanel = false
			this.startDate = ''
			this.chatKeyword = ''
            this.query = ''
            
            // 取成员
            const membersPage = await Group.searchMembers(this.group.id, '', 1, 30)
            this.groupMembers = membersPage.content
            this.groupMemberLoading = false
            
            // 后端从go服务获取session，根据expandable传入的参数决定是否展开对应的子对象数据
			this.session = await Session.retrieveByRelation(this.group.profile.contactID, this.group.id, ['profile', 'group'])
			if (!this.session) {
				this.messages = []
				this.messagesLoading = false
				return
			}

            // 取消息
			const messages = await Message.listBySession(this.session.id, this.chatKeyword, this.startDate, 10, 1, ['avatar'])
            this.messages = messages.content
            this.messagesLoading = false
            
        },
        //群列表搜索
        async searchGroups() {
            this.listLoading = true

            this.groupPage = 1
			const page = await Group.searchGroups(this.filter.fromId, this.keyword, this.groupPage, 30, [])
            this.groups = page.content
            
            this.listLoading = false
        },
        // 搜索群成员
		async searchGroupMembers() {
			this.groupMemberLoading = true
			const members = await Group.searchMembers(this.group.id, this.groupMemberKeyword, this.groupMemberPage, 30)
			this.groupMembers = members.content
			this.groupMemberLoading = false
        },
        // 消息查询
		async onSearchMessages() {
            if (!this.session) return
            
			this.messagesLoading = true
            
            this.showQueryPanel = this.chatKeyword !== ''
			this.query = this.chatKeyword !== '' ? this.chatKeyword : ''
			const cursor = !this.startDate ? '' : new Date(this.startDate).getTime()
			const messages = await Message.listBySession(this.session.id, this.chatKeyword, cursor, 10, 1)
			this.showQueryPanel ? this.searchMessages = messages.content : this.messages = messages.content
            
            this.messagesLoading = false
        },
        // session 下拉加载消息
        async fetchMessagesBackward() {
			if (_.isEmpty(this.messages)) return
                const cursor = _.last(this.messages).sendTime || ''
				const messages = await Message.listBySession(this.session.id, this.chatKeyword, cursor, 10, 1)
				this.messages = _.concat(this.messages, messages.content)
        },
        // session 上拉刷新消息
		async fetchMessagesUpward() {
			if (_.isEmpty(this.messages)) return
				const cursor = _.first(this.messages).sendTime || ''
				const messages = await Message.listBySession(this.session.id, this.chatKeyword, cursor, 10, 1)
				this.messages = _.concat(messages.content, this.messages)
        },
        // 查看上下文
		async onViewContext(sendTime) {
			const cursor = sendTime - 20
			const messages = await Message.listBySession(this.session.id, '', cursor, 10, 0)
			this.messages = messages.content
			this.showQueryPanel = false
        },
    }
}
</script>
